Given two sorted arrays arr1[] and arr2[]. Your task is to return the intersection of both arrays.Intersection of two arrays is said to be elements that are common in both arrays.
The intersection should not count duplicate elements.
Note: If the intersection is empty then the list should contain -1.

https://www.geeksforgeeks.org/problems/intersection-of-two-sorted-array-1587115620/0

Input: arr1[] = [1, 2, 2, 3, 4], arr2[] = [2, 2, 4, 6, 7, 8]
Output: [2, 4]
Explanation: 2 and 4 are the only common elements.

Input: arr1[] = [1, 2], arr2[] = [3, 4]
Output: -1
Explanation: No common elements.

*JAVA

#1 soln (brute)

class Solution {
    // Function to return a list containing the intersection of two arrays.
    static ArrayList<Integer> printIntersection(int arr1[], int arr2[]) {
        int n=arr1.length;
        int m=arr2.length;
        Set<Integer> set = new HashSet<>();
        for (int i=0;i<n;i++){
            for (int j=0;j<m;j++) {
                if(arr1[i]==arr2[j]){
                    set.add(arr1[i]);
                    
                }
            }
        }
        // ArrayList<Integer> ans = new ArrayList<Integer>();
        // ans=set.toArray();
        ArrayList<Integer> ans = new ArrayList<>(set);
        Collections.sort(ans);
        if (ans.size()==0) {
            ArrayList<Integer> ans1 = new ArrayList<Integer> ();
            //ArrayList<Integer> ans1 = new ArrayList<>(Arrays.asList(-1));
            //ArrayList<Integer> ans1 = new ArrayList<>(Arrays.asList(new Integer[]{-1}));
            ans1.add(-1);
            return ans1;
        }
        return ans;
    }
}

#2 soln (better)

