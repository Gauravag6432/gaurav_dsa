https://www.geeksforgeeks.org/problems/largest-subarray-with-0-sum/1

Given an array having both positive and negative integers.
The task is to compute the length of the largest subarray with sum 0.

Input: arr[] = {15,-2,2,-8,1,7,10,23}, n = 8
Output: 5
Explanation: The largest subarray with sum 0 is -2 2 -8 1 7.

Input: arr[] = {2,10,4}, n = 3
Output: 0
Explanation: There is no subarray with 0 sum.

* JAVA

#1 soln (brute)

class GfG
{
    int maxLen(int a[], int n)
    {
        int maxx = 0;
        // Iterate over the starting index of the subarray
        for (int i = 0; i < n; i++) {
            int sum = 0;

            // Iterate over the ending index of the subarray
            for (int j = i; j < n; j++) {
                sum += a[j];
                
                // Check if the current subarray has a sum of zero
                if (sum == 0) {
                    maxx = Math.max(maxx, j - i + 1);
                }
            }
        }
        return maxx;
    }
}

#2 soln Optimal

class GfG
{
    int maxLen(int arr[], int n)
    {
        Map<Integer, Integer> mpp = new HashMap<>();
        int maxi = 0;
        int sum = 0;

        for (int i = 0; i < n; i++) {
            sum += arr[i];
            if (sum == 0) {
                maxi = i + 1;
            } else {
                if (mpp.containsKey(sum)) {
                    maxi = Math.max(maxi, i - mpp.get(sum));
                } else {
                    mpp.put(sum, i);
                }
            }
        }

        return maxi;
    }
}
