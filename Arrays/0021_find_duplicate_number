Given an array of integers nums containing n + 1 integers where each integer is in the range [1, n] inclusive.
There is only one repeated number in nums, return this repeated number.
You must solve the problem without modifying the array nums and uses only constant extra space.

https://leetcode.com/problems/find-the-duplicate-number/description/

Example 1: Input: nums = [1,3,4,2,2]
Output: 2 

Example 2:Input: nums = [3,1,3,4,2]
Output: 3

#1 my soln(brute) using sorting

class Solution:
    def findDuplicate(self, nums: List[int]) -> int:
        n=len(nums)
        num1=nums.copy()
        num1.sort()
        for i in range(n-1):
            if num1[i]==num1[i+1]:
                return num1[i]

#2 Optimal

class Solution:
    def findDuplicate(self, arr: List[int]) -> int:
        n = len(arr)
        freq = [0] * (n + 1)
        for i in range(n):
            if freq[arr[i]] == 0:
                freq[arr[i]] += 1
            else:
                return arr[i]
        return 0
