https://leetcode.com/problems/longest-consecutive-sequence/description/

Given an unsorted array of integers nums, return the length of the longest consecutive elements sequence.
You must write an algorithm that runs in O(n) time.

Example 1:
Input: nums = [100,4,200,1,3,2]
Output: 4
Explanation: The longest consecutive elements sequence is [1, 2, 3, 4]. Therefore its length is 4.

#JAVA Soln 1 -- O(NLog(N))

class Solution {
    public int longestConsecutive(int[] nums) {
        Arrays.sort(nums);
        int i=0,n=nums.length;
        if (n==0) return 0;
        int count=1,maxc=1;
        while(i<n-1){
            if (nums[i] != nums[i +1]) {
                if(nums[i]==(nums[i+1]-1)) {
                    count+=1;
                    maxc = Math.max(maxc, count);
                }
                else count=1;
            }  
            i++;
        }
        return maxc;
}}

#Soln 2-- O(3N)~ O(N)

class Solution {
    public int longestConsecutive(int[] nums) {
        if (nums.length == 0) return 0;
        HashSet<Integer> set = new HashSet<>();
        for (int num : nums) {
            set.add(num);
        }
        int longestStreak = 0;
        for (int num : set) {
            // Check only if the number is the start of a sequence
            if (!set.contains(num - 1)) {
                int currentNum = num;
                int currentStreak = 1;
                // Check for consecutive numbers in the sequence
                while (set.contains(currentNum + 1)) {
                    currentNum += 1;
                    currentStreak += 1;
                }
                longestStreak = Math.max(longestStreak, currentStreak);
            }}
        return longestStreak;
    }}
