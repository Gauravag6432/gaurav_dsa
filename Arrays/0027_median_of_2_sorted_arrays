#1 soln (brute)

class Solution:
    def findMedianSortedArrays(self, nums1: List[int], nums2: List[int]) -> float:
        nums3=[]
        m=len(nums1)
        n=len(nums2)
        i,j=0,0
        while(i<m and j<n):
            if nums1[i] <= nums2[j]:
                nums3.append(nums1[i])
                i+=1
            else:
                nums3.append(nums2[j])
                j+=1
        while(i<m):
            nums3.append(nums1[i])
            i+=1
        while(j<n):
            nums3.append(nums2[j])
            j+=1
        
        p= len(nums3)  
        if p % 2 == 0:
            return((nums3[p//2]+nums3[(p//2)-1])/2.0)
        else:
            return(nums3[(p)//2])

#2 soln (better)

class Solution:
    def findMedianSortedArrays(self, nums1: List[int], nums2: List[int]) -> float:
        nums3=[]
        m=len(nums1)
        n=len(nums2)
        i,j=0,0
        cnt=0
        ind1=(n+m)//2
        ind2=(n+m)//2-1
        ind1ele=-1
        ind2ele=-1
        while(i<m and j<n):
                
            if nums1[i] <= nums2[j]:
                if cnt==ind1:
                    ind1ele=nums1[i]
                if cnt==ind2:
                    ind2ele=nums1[i]
                cnt+=1
                i+=1
            else:
                if cnt==ind1:
                    ind1ele=nums2[j]
                if cnt==ind2:
                    ind2ele=nums2[j]
                cnt+=1
                j+=1
        while(i<m):
            if cnt==ind1:
                    ind1ele=nums1[i]
            if cnt==ind2:
                    ind2ele=nums1[i]
            cnt+=1
            i+=1
        while(j<n):
            if cnt==ind1:
                    ind1ele=nums2[j]
            if cnt==ind2:
                    ind2ele=nums2[j]
            cnt+=1
            j+=1
        
        if (n+m) % 2 == 0:
            return ((ind1ele+ind2ele)/2)
        else:
            return (ind1ele)
