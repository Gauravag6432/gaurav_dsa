Articles- 
https://www.geeksforgeeks.org/smallest-difference-pair-values-two-unsorted-arrays/

https://www.geeksforgeeks.org/find-m-th-smallest-value-in-k-sorted-arrays/

https://www.geeksforgeeks.org/minimum-number-swaps-required-sort-array/

https://www.geeksforgeeks.org/integer-valueof-vs-integer-parseint-with-examples/

https://www.geeksforgeeks.org/split-string-java-examples/

https://www.w3schools.com/java/java_user_input.asp
________________________________________________________________________

# Scanner class syntaxes 

Scanner input = new Scanner(System.in); // takes input from the keyboard

    int a = input.nextInt();  //returns the next integer
    float b = input.nextFloat(); //returns the next float
    String c = input.next(); // returns the next input 
    String d = input.nextLine();  // returns next line in string
    boolean e = input.hasNextInt(); //checks if next input is a integer & returns true/false
________________________________________________________________________

# Lambda Expression: To convert any function into lambda function: -

i) Remove modifier, return type and method name
ii) Add "->" between body and parameter

Ex: private int add(int a,int b){
        return (a+b);
    }

The Lambda expression of the above function would be: -
    (int a,int b) -> {return (a+b);}

Moreover
i) Outermost brackets could be removed if it's single statement
ii) return keyword could be removed
iii) input type could be removed

Hence the code would look like: -
(a,b) -> (a+b);

Therefore the code looks more redable and concise..
________________________________________________________________________

Length and other imp func.

int[] arr = {1, 2, 3, 4, 5};
int size = arr.length; 
Arrays.sort(nums);

List<Integer> list = new ArrayList<>();
int size = list.size();

String str = "Hello World";
int length = str.length();

maxc = Math.max(maxc, count);

________________________________________________________________________
#Type casting 
int divident = 99; //32 bit space
long n = Math.abs((long)dividend); //64 bit space
long m = (long) dividend;
________________________________________________________________________
