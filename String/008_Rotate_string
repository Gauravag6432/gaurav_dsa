https://leetcode.com/problems/rotate-string/

Given two strings s and goal, return true if and only if s can become goal after some number of shifts on s.
A shift on s consists of moving the leftmost character of s to the rightmost position.
For example, if s = "abcde", then it will be "bcdea" after one shift.

Example 1:
Input: s = "abcde", goal = "cdeab"
Output: true

Example 2:
Input: s = "abcde", goal = "abced"
Output: false

# Java

# App I:

class Solution {
    public boolean rotateString(String s, String goal) {
        int n= s.length();
        if (n!=goal.length()) return false;

        for(int i=0;i<n;i++){
            int count =0;
            if(goal.charAt(0)==s.charAt(i)){
                int j=i;
                for(char a:goal.toCharArray()){
                    if( a==s.charAt(j%n)){
                        j++;
                        count ++;
                    }
                    else break;
                }
            }
            if (count == n) return true;
        }
        return false;
    }
}

#Approach II
class Solution {
    public boolean rotateString(String s, String goal) {
        if (s.length() != goal.length()) return false;
        for (int i = 0; i < s.length(); i++) {
            if ((s.substring(i) + s.substring(0, i)).equals(goal)) {
                return true;
            }
        }
        return false;
    }
}

# App III:

class Solution {
    public boolean rotateString(String s, String goal) {
        if (s.length() != goal.length()) return false;
        String combined = s + s;
        return combined.contains(goal);
    }
}
