https://leetcode.com/problems/longest-common-prefix/

Write a function to find the longest common prefix string amongst an array of strings.
If there is no common prefix, return an empty string "".

Example 1:
Input: strs = ["flower","flow","flight"]
Output: "fl"

Example 2:
Input: strs = ["dog","racecar","car"]
Output: ""
Explanation: There is no common prefix among the input strings.


#Java brute

class Solution {
    public String longestCommonPrefix(String[] strs) {
        if (strs == null || strs.length == 0) {
            return ""; // Handle empty array
        }
        int n = strs.length;
        int m = strs[0].length(); // Maximum length of the prefix is the length of the first string
        int count = 0;
        
        for (int i = 0; i < m; i++) {
            char c = strs[0].charAt(i); // Compare with the first string
            for (int j = 1; j < n; j++) {
                // If any string is shorter or characters don't match, stop
                if (i >= strs[j].length() || strs[j].charAt(i) != c) {
                    return strs[0].substring(0, count);
                }}
            count++; // Increment count for a matching character
        }
        return strs[0].substring(0, count); // Return the full prefix if no mismatch occurs
    }}

# optimal
class Solution {
    public String longestCommonPrefix(String[] strs) {
        if (strs.length == 0) return "";
        String prefix = strs[0];
        for (int i = 1; i < strs.length; i++) {
            while (strs[i].indexOf(prefix) != 0) {
                prefix = prefix.substring(0, prefix.length() - 1); // Shorten the prefix by 1 char
                if (prefix.isEmpty()) return ""; // Return if no common prefix exists
        }}
        return prefix;
    }}
