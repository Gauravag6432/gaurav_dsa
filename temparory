6.

import java.util.ArrayList;
import java.util.List;

public class Solution {
    
    // Method to get all subset sums
    public List<Integer> getAllSubsetSum(int[] nums) {
        List<Integer> result = new ArrayList<>();
        result.add(0);  // Initial subset sum is 0

        getSubsetSum(nums.length - 1, nums, result);
        
        return result;
    }
    
    // Recursive method to calculate all subset sums
    private void getSubsetSum(int ind, int[] arr, List<Integer> a) {
        if (ind < 0) {
            return;
        }
        
        List<Integer> temp = new ArrayList<>();
        for (int i : a) {
            temp.add(i + arr[ind]);
        }
        a.addAll(temp);
        
        getSubsetSum(ind - 1, arr, a);
    }
    
    public static void main(String[] args) {
        Solution solution = new Solution();
        int[] nums = {1, 2, 3};
        List<Integer> result = solution.getAllSubsetSum(nums);
        System.out.println(result);  // Output all subset sums
    }
}

7.

import java.util.ArrayList;
import java.util.List;

public class Solution {
    
    // Method to get all subsets
    public List<List<Integer>> getAllSubsets(int[] nums) {
        List<List<Integer>> result = new ArrayList<>();
        getSubsets(nums.length - 1, nums, result);
        return result;
    }
    
    // Recursive method to generate all subsets
    private void getSubsets(int ind, int[] arr, List<List<Integer>> a) {
        if (ind < 0) {
            return;
        }
        
        List<List<Integer>> temp = new ArrayList<>();
        
        for (List<Integer> subset : a) {
            List<Integer> newSubset = new ArrayList<>(subset);
            newSubset.add(arr[ind]);
            temp.add(newSubset);
        }
        
        a.addAll(temp);
        
        List<Integer> singleElementSubset = new ArrayList<>();
        singleElementSubset.add(arr[ind]);
        a.add(singleElementSubset);
        
        getSubsets(ind - 1, arr, a);
    }
    
    public static void main(String[] args) {
        Solution solution = new Solution();
        int[] nums = {1, 2, 3};
        List<List<Integer>> result = solution.getAllSubsets(nums);
        System.out.println(result);  // Output all subsets
    }
}
