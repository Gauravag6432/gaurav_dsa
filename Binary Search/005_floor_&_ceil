https://www.naukri.com/code360/problems/ceiling-in-a-sorted-array_1825401

You're given a sorted array 'a' of 'n' integers and an integer 'x'.
Find the floor and ceiling of 'x' in 'a[0..n-1]'.
Note: Floor of 'x' is the largest element in the array which is smaller than or equal to 'x'.
Ceiling of 'x' is the smallest element in the array greater than or equal to 'x'.

Sample Input 1 :
6 8
3 4 4 7 8 10
Sample Output 1 : 8 8
Explanation: Since x = 8 is present in the array, it will be both floor and ceiling.

Sample Input 2 :
6 2
3 4 4 7 8 10
Sample Output 2 : -1 3
Explanation: Since no number is less than or equal to x = 2 in the array, its floor does not exist. The ceiling will be 3.

#Java Soln--

public class Solution {
  public static int[] getFloorAndCeil(int[] a, int n, int x) {
    int[] ans = new int[2];
    int slow=0,fast=n-1;
    int mid=0, floor=-1,ceil=-1;
    while(slow<=fast){
      mid= (slow+fast)/2;
      if (x==a[mid]){
        ans[0]=x;
        ans[1]=x;
        return ans;
      }
      else if (x<a[mid]) {
        fast=mid-1;
        ceil=a[mid];
      }
      else {
        slow= mid+1;
        floor=a[mid];
      }
    }
    ans[0]= floor;
    ans[1]= ceil;
    return ans;
  }
}
