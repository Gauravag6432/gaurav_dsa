https://www.geeksforgeeks.org/problems/bfs-traversal-of-graph/1

Given a directed graph. The task is to do Breadth First Traversal of this graph starting from 0.
Note:One can move from node u to node v only if there's an edge from u to v.
Find the BFS traversal of the graph starting from the 0th vertex, from left to right according to the input graph. 
Also, you should only take nodes directly or indirectly connected from Node 0 in consideration.

Example--
Input:
V = 5, E = 4
adj = {{1,2,3},{},{4},{},{}}
Output: 0 1 2 3 4

#JAVA Soln

class Solution {
    // Function to return Breadth First Traversal of given graph.
    public ArrayList<Integer> bfsOfGraph(int V, ArrayList<ArrayList<Integer>> adj) {
        Queue<Integer> q = new LinkedList<>();
        q.add(0);
        boolean[] visited = new boolean[V]; // To keep track of visited nodes
        visited[0] = true; // Mark the starting node as visited
        
        ArrayList<Integer> bfs = new ArrayList<>();
        
        while (!q.isEmpty()) {
            Integer node = q.poll();
            bfs.add(node);
            
            for (Integer j : adj.get(node)) {
                if (!visited[j]) { // Check if the node is not visited
                    q.add(j);
                    visited[j] = true; // Mark the node as visited
                }}}
        return bfs;
    }}
