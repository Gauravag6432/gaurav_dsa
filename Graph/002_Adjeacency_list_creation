https://www.geeksforgeeks.org/problems/print-adjacency-list-1587115620/1

Given an undirected graph with V nodes and E edges, 
create and return an adjacency list of the graph. 0-based indexing is followed everywhere.

Input: V = 5, E = 7
edges = {(0,1),(0,4),(4,1),(4,3),(1,3),(1,2),(3,2)}

Output: {{1,4}, 
 {0,2,3,4}, 
 {1,3},
 {1,2,4},
 {0,1,3}}

#JAVA soln

class Solution {
    public List<List<Integer>> printGraph(int V, int edges[][]) {
        List<List<Integer>> adjList = new ArrayList<>();
        
        // Create empty lists for each vertex
        for (int i = 0; i < V; i++) {
            adjList.add(new ArrayList<>());
        }
        
        // Populate the adjacency list
        for (int[] edge : edges) {
            int u = edge[0];
            int v = edge[1];
            
            // Add v to the list of u and u to the list of v
            adjList.get(u).add(v);
            adjList.get(v).add(u);
        }
        
        return adjList;
    }
}
