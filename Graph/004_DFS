https://www.geeksforgeeks.org/problems/depth-first-traversal-for-a-graph/1

You are given a connected undirected graph. Perform a Depth First Traversal of the graph.
Note: Use the recursive approach to find the DFS traversal of the graph starting from 
the 0th vertex from left to right according to the graph.

Example: Input: V = 5 , adj = [[2,3,1] , [0], [0,4], [0], [2]]
Output: 0 2 4 3 1

#JAVA Soln.

class Solution {
    // Function to return a list containing the DFS traversal of the graph.
    public void dfs(int node, ArrayList<ArrayList<Integer>> adj,
       boolean vis[],ArrayList<Integer> ans ){
           
            vis[node]=true; //marking current node as visited
            ans.add(node); //adding current node to the list

            //getting neighbour nodes
            for(int i:adj.get(node)){
                if(!vis[i]){
                    dfs(i,adj,vis,ans);
                }}}

    public ArrayList<Integer> dfsOfGraph(int V, ArrayList<ArrayList<Integer>> adj) {
        
        boolean vis[] = new boolean[V+1];
        int start=0;
        ArrayList<Integer> ans= new ArrayList<Integer>(); //list to save dfs traversal
        dfs(start,adj,vis,ans);
        return ans;
    }}
