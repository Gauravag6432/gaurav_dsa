https://www.geeksforgeeks.org/problems/linked-list-insertion-1587115620/0

Given the head of a Singly Linked List and a value x,
insert that value x at the end of the LinkedList and return the modified Linked List.

Examples :
Input: LinkedList: 1->2->3->4->5 , x = 6
Output: 1->2->3->4->5->6
Explanation: 
We can see that 6 is inserted at the end of the linkedlist.

Expected Time Complexity: O(n)
Expected Auxiliary Space: O(1)

# java soln
class Solution {
    Node insertAtEnd(Node head, int x) {
        Node newnode= new Node(x);  //creating a new node with given value x
        
        if(head==null){ //if head is empty LL, just return the given node
            return newnode;
        }
        Node temp=head;
        while(temp.next!=null){ //iterating to the last node of the LL
            temp=temp.next;
        }
        temp.next=newnode; // Inserting thr new node
        return head;
    }
}
----------------------------------

#variation 2: Inserting at the head--

 public static Node insertHead(Node head, int val) {
        Node temp = new Node(val, head);
        return temp;
    }
